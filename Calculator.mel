proc float Calculator(float $input[], int $operation)
{
    if($operation == 0)
    {
        for($i = 0;$i<size($input); ++$i)
        {
            if($i != 0)
            {
                print(" + ");
            }
            print($input[$i]);
        }
        print(" = ");
        print(Sum($input)+ "\n");
        return Sum($input);
    }
    if($operation == 1)
    {
        for($i = 0;$i<size($input); ++$i)
        {
            if($i != 0)
            {
                print(" - ");
            }
            print($input[$i]);
        }
        print(" = ");
        print(Diff($input)+ "\n");
        return Diff($input);
    }
    if($operation == 2)
    {
        for($i = 0;$i<size($input); ++$i)
        {
            if($i != 0)
            {
                print(" x ");
            }
            print($input[$i]);
        }
        print(" = ");
        print(Mult($input)+ "\n");
        return Mult($input);
    }
    if($operation == 3)
    {
        for($i = 0;$i<size($input); ++$i)
        {
            if($i != 0)
            {
                print(" / ");
            }
            print($input[$i]);
        }
        print(" = ");
        print(Div($input)+ "\n");
        return Div($input);
    }
    if($operation == 4)
    {
        print($input[0] +"^" + $input[1] + " = ");
        print(Pow($input[0],$input[1])+ "\n");
        return Pow($input[0],$input[1]);
    }
    if($operation == 5)
    {
        for($i = 0;$i<size($input); ++$i)
        {
            if($i != 0)
            {
                print(", ");
            }
            print($input[$i]);
        }
        print(" averaged = ");
        print(Mean($input)+ "\n");
        return Mean($input);
    }
    if($operation == 6)
    {
        for($i = 0;$i<size($input); ++$i)
        {
            if($i != 0)
            {
                print(", ");
            }
            print($input[$i]);
        }
        print(" median = ");
        print(Median($input)+ "\n");
        return Median($input);
    }
}

global proc float Sum(float $nums[])
{
    float $result = 0;
    for($i = 0;$i<size($nums); ++$i)
    {
       $result += $nums[$i];
    }
    return $result;
}

global proc float Diff(float $nums[])
{
    float $result = $nums[0];
    for($i = 1;$i<size($nums); ++$i)
    {
       $result -= $nums[$i];
    }
    return $result;
}

global proc float Mult(float $nums[])
{
    float $result = $nums[0];
    for($i = 1;$i<size($nums); ++$i)
    {
       $result *= $nums[$i];
    }
    return $result;
}


global proc float Div(float $nums[])
{
    float $result = $nums[0];
    for($i = 1;$i<size($nums); ++$i)
    {
       $result /= $nums[$i];
    }
    return $result;
}

global proc float Pow(float $base, int $exponent)
{
    if ($exponent == 0) return 1;
    $result = $base;
    for($i = 1;$i<`abs$exponent`; ++$i)
    {
       $result *= $base;
    }
    if ($exponent < 0)
    {
        return 1/$result;
    }
    return $result;
}

global proc float Mean(float $nums[])
{
    return Sum($nums)/size($nums);
}

global proc float Median(float $nums[])
{
    float $sorted[] = `sort $nums`;
    int $size = size($sorted);
    if($size%2 == 0)
    {
        float $mid[] = {$sorted[$size/2 - 1],$sorted[($size/2)]};
        return Mean($mid);
    }
    else return $sorted[int(`ceil($size/2)`)];
}

global proc RunCalculator()
{
    string $floatFields = `optionVar -q "textFields"`;
    string $operationField = `optionVar -q "operationField"`;
    string $resultField = `optionVar -q "resultField"`;

    float $floatArray[] = `floatFieldGrp -q -value $floatFields`;
    int $operation = `intField -q -value $operationField`;
    print $operation;
    print $floatArray;
    float $result = Calculator($floatArray,$operation);
    textField -e -text $result $resultField;
}


global proc CalculatorUI()
{
    string $calcWindow = "calculator_ui";

    if(`window -exists $calcWindow`)
        deleteUI $calcWindow;

    $calcWindow = `window -title "Calculator"
                    -widthHeight 300 500
                    -resizeToFitChildren 1
                    $calcWindow`;
    string $calcColumn = `columnLayout -parent $calcWindow -adjustableColumn 1`;
    optionVar -stringValue "textFields" `floatFieldGrp -parent $calcColumn -numberOfFields 4`;
    optionVar -stringValue "operationField" `intField -parent $calcColumn`;
    button -parent $calcColumn -label "Run" -command "RunCalculator";   
    optionVar -stringValue "resultField" `textField -parent $calcColumn -placeholderText "Result" -editable 0`;

    showWindow $calcWindow;
}

CalculatorUI();
